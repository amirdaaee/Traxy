apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-relay-env
data:
  REMOTE_URL: # fill remote url here (e.g.: "example.com") 
  REMOTE_PORT: # fill remote port here (e.g.: "443") 
  TRAEFIK_ENTRYPOINTS_VTF: "true"
  TRAEFIK_ENTRYPOINTS_VTF_ADDRESS: ":445" 
  TRAEFIK_PROVIDERS_FILE_DIRECTORY: "/data"
  TRAEFIK_PROVIDERS_FILE_WATCH: "false"
  TRAEFIK_LOG: "true"
  TRAEFIK_LOG_LEVEL: "WARNING"
  TRAEFIK_ACCESSLOG: "false"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-relay-conf
data:
  app.yaml: |
        http:
          services:
            vtf-service:
              loadBalancer:
                passHostHeader: false
                servers:
                - url: https://{{ env "REMOTE_URL" }}:{{ env "REMOTE_PORT" }}
          routers:
            vtf-router:
              rule: "PathPrefix(`/`)"
              service: vtf-service
              tls: {}
        tls:
            certificates:
            - certFile: /cert/cert.pem
              keyFile: /cert/key.pem
---
apiVersion: v1
kind: Secret
metadata:
    name: traefik-relay-cert
type: Opaque
stringData:
    cert.pem: | 
      # fill your tls cert here
    key.pem: |
      # fill your tls key here
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-relay-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: traefik-relay
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: traefik-relay
    spec:
      containers:
        - name: traefik
          image: traefik:latest
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: traefik-relay-env
          ports:
            - containerPort: 445
          resources:
            limits: &resource
              cpu: 100m
              ephemeral-storage: 100M
              memory: 200M
            requests: *resource
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /cert
              name: cert
            - mountPath: /data
              name: data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      volumes:
        - name: data
          configMap:
            name: traefik-relay-conf
        - name: cert
          secret:
            defaultMode: 420
            secretName: traefik-relay-cert
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-relay-loadbalancer
spec:
  ports:
  - name: tcp-445
    port: 445
    protocol: TCP
    targetPort: 445
  selector:
    app: traefik-relay
  type: LoadBalancer